{
  "openapi": "3.1.0",
  "info": {
    "title": "Laravel",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://managex.test/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "authenticatedSession.store",
        "summary": "Attempt to authenticate a new session",
        "tags": [
          "AuthenticatedSession"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/comments/{comment}/best": {
      "post": {
        "operationId": "bestComment.mark",
        "tags": [
          "BestComment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Marked"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "prefixItems": [
                            {
                              "type": "string",
                              "enum": [
                                "Already marked"
                              ]
                            }
                          ],
                          "minItems": 1,
                          "maxItems": 1,
                          "additionalItems": false
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "delete": {
        "operationId": "bestComment.unmark",
        "tags": [
          "BestComment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Unmarked"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "operationId": "categories.index",
        "summary": "Display a listing of the resource",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "categories.store",
        "summary": "Store a newly created resource in storage",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Category Created"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/categories/{category}": {
      "get": {
        "operationId": "categories.show",
        "summary": "Display the specified resource",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "The category ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "categories.update",
        "summary": "Update the specified resource in storage",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "The category ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Category Updated"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "categories.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "The category ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Category Deleted"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/posts/{post}/comments": {
      "get": {
        "operationId": "posts.comments.index",
        "summary": "Display a listing of the resource",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CommentResource"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "links": {
                              "type": "array",
                              "description": "Generated paginator links.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "active": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "url",
                                  "label",
                                  "active"
                                ]
                              }
                            },
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Base path for paginator generated URLs."
                            },
                            "per_page": {
                              "type": "integer",
                              "description": "Number of items shown per page."
                            },
                            "to": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "description": "Number of the last item in the slice."
                            },
                            "total": {
                              "type": "integer",
                              "description": "Total number of items being paginated."
                            }
                          },
                          "required": [
                            "current_page",
                            "from",
                            "last_page",
                            "links",
                            "path",
                            "per_page",
                            "to",
                            "total"
                          ]
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "first": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "last": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "prev": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "next": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "first",
                            "last",
                            "prev",
                            "next"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "links",
                        "meta"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "post": {
        "operationId": "posts.comments.store",
        "summary": "Store a newly created resource in storage",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Unauthorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Comment created"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/posts/{post}/comments/create": {
      "get": {
        "operationId": "posts.comments.create",
        "summary": "Show the form for creating a new resource",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/comments/{comment}": {
      "get": {
        "operationId": "comments.show",
        "summary": "Display the specified resource",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "comments.update",
        "summary": "Update the specified resource in storage",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Comment Updated"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "comments.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Comment Deleted"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/comments/{comment}/edit": {
      "get": {
        "operationId": "comments.edit",
        "summary": "Show the form for editing the specified resource",
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "path",
            "required": true,
            "description": "The comment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/user/confirmed-two-factor-authentication": {
      "post": {
        "operationId": "two-factor.confirm",
        "summary": "Enable two factor authentication for the user",
        "tags": [
          "ConfirmedTwoFactorAuthentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/auth/email/verification-notification": {
      "post": {
        "operationId": "emailVerificationNotification.store",
        "summary": "Send a new email verification notification",
        "tags": [
          "EmailVerificationNotification"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/favourites/{post}": {
      "post": {
        "operationId": "favourite.addToFavourites",
        "tags": [
          "Favourite"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Added to favourites"
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "delete": {
        "operationId": "favourite.removeFromFavourites",
        "tags": [
          "Favourite"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Removed from favourites"
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/favourites": {
      "get": {
        "operationId": "favourite.getFavourites",
        "tags": [
          "Favourite"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostResource"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/auth/{provider}": {
      "get": {
        "operationId": "login.redirectToProvider",
        "summary": "Redirect the user to the Provider authentication page",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "Please login using facebook, github or google"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "operationId": "login.handleProviderCallback",
        "summary": "Obtain the user information from Provider",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "enum": [
                            "Invalid credentials provided."
                          ]
                        }
                      },
                      "required": [
                        "error"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "enum": [
                            "Please login using facebook, github or google"
                          ]
                        }
                      },
                      "required": [
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "logout.destroy",
        "summary": "Destroy an authenticated session",
        "tags": [
          "Logout"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/posts/{post}/medias": {
      "post": {
        "operationId": "media.store",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateMediaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Medias Created"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/posts/{post}/medias/{media_id}": {
      "delete": {
        "operationId": "media.destroy",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "media_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Media Deleted"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/profile-image/{id}/{filename}": {
      "get": {
        "operationId": "profile.image",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the file as a response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/download/{id}/{filename}": {
      "get": {
        "operationId": "media.download",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "operationId": "metric.index",
        "tags": [
          "Metric"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "roles": {
                              "type": "object",
                              "properties": {
                                "admins": {
                                  "type": "string"
                                },
                                "users": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "admins",
                                "users"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "roles"
                          ]
                        },
                        "posts": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            },
                            "published": {
                              "type": "string"
                            },
                            "categories": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CategoryResource"
                              }
                            }
                          },
                          "required": [
                            "total",
                            "published",
                            "categories"
                          ]
                        },
                        "comments": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total"
                          ]
                        },
                        "media": {
                          "type": "object",
                          "properties": {
                            "total_files": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_files"
                          ]
                        }
                      },
                      "required": [
                        "users",
                        "posts",
                        "comments",
                        "media"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/update-password": {
      "put": {
        "operationId": "password.update",
        "summary": "Update the user's password",
        "tags": [
          "Password"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "password.email",
        "summary": "Send a reset link to the given user",
        "tags": [
          "PasswordResetLink"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/posts/trending": {
      "get": {
        "operationId": "post.trending",
        "summary": "Get trending posts",
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "return $trending;\n\n\n\nArray of `PostResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostResource"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "operationId": "posts.index",
        "summary": "Display a listing of the resource",
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `PostResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostResource"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "posts.store",
        "summary": "Store a newly created resource in storage",
        "tags": [
          "Post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StorePostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Post Created"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "posts.show",
        "summary": "Display the specified resource",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`PostResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PostResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/posts/{post}": {
      "delete": {
        "operationId": "posts.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "Post Deleted"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "patch": {
        "operationId": "post.update",
        "summary": "Update the specified resource in storage",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "description": "The post ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "Not authorized"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/Post"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "operationId": "profile.me",
        "summary": "Display the my profile",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "`OwnProfileResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OwnProfileResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "profile.updateMe",
        "summary": "Update the my profile",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "integer",
                              "enum": [
                                401
                              ]
                            },
                            "message": {
                              "type": "string",
                              "enum": [
                                "You are not authorized to update that resource"
                              ]
                            },
                            "source": {
                              "type": "string",
                              "enum": [
                                ""
                              ]
                            }
                          },
                          "required": [
                            "status",
                            "message",
                            "source"
                          ]
                        }
                      },
                      "required": [
                        "errors"
                      ]
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "enum": [
                            "profile updated"
                          ]
                        },
                        "status": {
                          "type": "integer",
                          "enum": [
                            200
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "message",
                        "status"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/stats": {
      "get": {
        "operationId": "profile.stats",
        "summary": "User stats",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/update-email": {
      "put": {
        "operationId": "profile.updateEmail",
        "summary": "Update Email",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Updated"
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        200
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "registeredUser.store",
        "summary": "Create a new registered user",
        "tags": [
          "RegisteredUser"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remember": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "operationId": "role.index",
        "summary": "Display a listing of the resource",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/user/two-factor-authentication": {
      "post": {
        "operationId": "two-factor.enable",
        "summary": "Enable two factor authentication for the user",
        "tags": [
          "TwoFactorAuthentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "two-factor.disable",
        "summary": "Disable two factor authentication for the user",
        "tags": [
          "TwoFactorAuthentication"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/user/two-factor-qr-code": {
      "get": {
        "operationId": "two-factor.qr-code",
        "summary": "Get the SVG element for the user's two factor authentication QR code",
        "tags": [
          "TwoFactorQrCode"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "svg": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "svg",
                        "url"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "users.index",
        "summary": "Display a listing of the resource",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "users.store",
        "summary": "Store a newly created resource in storage",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/users/{user}": {
      "get": {
        "operationId": "users.show",
        "summary": "Display the specified resource",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "users.update",
        "summary": "Update the specified resource in storage",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "delete": {
        "operationId": "users.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "posts_count": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "CategoryResource"
      },
      "CommentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "post_id": {
            "type": "integer"
          },
          "user_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "content": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          }
        },
        "required": [
          "id",
          "post_id",
          "user_id",
          "content"
        ],
        "title": "CommentResource"
      },
      "CreateMediaRequest": {
        "type": "object",
        "properties": {
          "medias": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary",
              "contentMediaType": "application/octet-stream"
            }
          }
        },
        "required": [
          "medias"
        ],
        "title": "CreateMediaRequest"
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MediaResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "mime_type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "download_url": {
            "type": "string"
          },
          "downloads": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "integer",
                "enum": [
                  0
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "file_name",
          "size",
          "mime_type",
          "url",
          "download_url",
          "downloads"
        ],
        "title": "MediaResource"
      },
      "OwnProfileResource": {
        "type": "object",
        "properties": {
          "": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResource"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResource"
            }
          },
          "favourites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostResource"
            }
          }
        },
        "required": [
          null,
          "image_url",
          "categories"
        ],
        "title": "OwnProfileResource"
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "user_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "category_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "publish": {
            "type": "integer"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "user_id",
          "category_id",
          "publish",
          "created_at",
          "updated_at"
        ],
        "title": "Post"
      },
      "PostResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "publish": {
            "type": "integer"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryResource"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaResource"
            }
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "publish",
          "created_at",
          "updated_at",
          "medias"
        ],
        "title": "PostResource"
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "bio": {
            "type": [
              "string",
              "null"
            ]
          },
          "user_id": {
            "type": "integer"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "bio",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "Profile"
      },
      "RoleResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "RoleResource"
      },
      "StoreCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "name"
        ],
        "title": "StoreCategoryRequest"
      },
      "StoreCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ],
        "title": "StoreCommentRequest"
      },
      "StorePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "publish": {
            "type": "boolean"
          },
          "category_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "medias": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary",
              "contentMediaType": "application/octet-stream"
            }
          }
        },
        "required": [
          "title",
          "body",
          "publish",
          "category_id"
        ],
        "title": "StorePostRequest"
      },
      "UpdateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "name"
        ],
        "title": "UpdateCategoryRequest"
      },
      "UpdateCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": [
          "content"
        ],
        "title": "UpdateCommentRequest"
      },
      "UpdateEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255
          }
        },
        "required": [
          "email"
        ],
        "title": "UpdateEmailRequest"
      },
      "UpdatePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "publish": {
            "type": "boolean"
          },
          "category_id": {
            "type": "integer"
          }
        },
        "title": "UpdatePostRequest"
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          },
          "image": {
            "type": "string",
            "format": "binary",
            "contentMediaType": "application/octet-stream",
            "maxLength": 2048
          },
          "password": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "password"
        ],
        "title": "UpdateProfileRequest"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "profile": {
            "description": "'email' => $this->email,",
            "$ref": "#/components/schemas/Profile"
          },
          "image_url": {
            "type": "string"
          },
          "interested_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "image_url"
        ],
        "title": "UserResource"
      }
    },
    "responses": {
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}